Chapter 3 
 
Table 3-6. PHP’s superglobal variables
Superglobal name Contents
 
$GLOBALS All variables that are currently defined in the global scope of the script. The variable names are the keys of the array.
$_SERVER Information such as headers, paths, and script locations. The entries in this array are created by the web server, and there is no guarantee that every web server will provide any or all of these.
$_GET Variables passed to the current script via the HTTP GET method.
$_POST Variables passed to the current script via the HTTP POST method.
$_FILES Items uploaded to the current script via the HTTP POST method.
$_COOKIE Variables passed to the current script via HTTP cookies.
$_SESSION Session variables available to the current script.
$_REQUEST Contents of information passed from the browser; by default, $_GET, $_POST, and $_COOKIE.
$_ENV Variables passed to the current script via the environment method.
 
 
$came_from = $_SERVER['HTTP_REFERER'];
 
$came_from = htmlentities($_SERVER['HTTP_REFERER']);
 
Using the htmlentities function for sanitization is an important
practice in any circumstance where user or other third-party data is
being processed for output, not just with superglobals.
 
 

 
Chapter 3 Questions
1. What tag is used to cause PHP to start interpreting program code? And what is the
short form of the tag? 
2. What are the two types of comment tags?
3. Which character must be placed at the end of every PHP statement?
4. Which symbol is used to preface all PHP variables?
5. What can a variable store?
6. What is the difference between $variable = 1 and $variable == 1?
7. Why do you suppose an underscore is allowed in variable names (e.g.,
$current_user) whereas hyphens are not (e.g., $current-user)?
8. Are variable names case-sensitive?
9. Can you use spaces in variable names?
10. How do you convert one variable type to another (say, a string to a number)?
11. What is the difference between ++$j and $j++?
12. Are the operators && and and interchangeable?
13. How can you create a multiline echo or assignment?
14. Can you redefine a constant?
15. How do you escape a quotation mark?
16. What is the difference between the echo and print commands?
17. What is the purpose of functions?
18. How can you make a variable accessible to all parts of a PHP program?
19. If you generate data within a function, what are a couple of ways to convey the data
to the rest of the program?
20. What is the result of combining a string with a number?
 
 
 

Chapter 4 Expressions and Control Flow in PHP
 
Questions
1. What actual underlying values are represented by TRUE and FALSE?
2. What are the simplest two forms of expressions?
3. What is the difference between unary, binary, and ternary operators?
4. What is the best way to force your own operator precedence?
5. What is meant by operator associativity?
6. When would you use the === (identity) operator?
7. Name the three conditional statement types.
8. What command can you use to skip the current iteration of a loop and move on to
the next one?
9. Why is a for loop more powerful than a while loop?
10. How do if and while statements interpret conditional expressions of different data
types?
See “Chapter 4 Answers” on page 641 in Appendix A for the answers to these questions.
 
Chapter 4 Answers
1. In PHP, TRUE represents the value 1, and FALSE represents NULL, which can be
thought of as “nothing” and is output as the empty string.
2. The simplest forms of expressions are literals (such as numbers and strings) and
variables, which simply evaluate to themselves.
3. The difference between unary, binary, and ternary operators is the number of
operands each requires (one, two, and three, respectively).
4. The best way to force your own operator precedence is to place parentheses
around subexpressions to which you wish to give high precedence.
5. Operator associativity refers to the direction of processing (left to right, or right to
left).
6. You use the identity operator when you wish to bypass PHP’s automatic operand
type changing (also called type casting).
7. The three conditional statement types are if, switch, and the ?: operator.
8. To skip the current iteration of a loop and move on to the next one, use a continue
statement.
9. Loops using for statements are more powerful than while loops, because they sup‐
port two additional parameters to control the loop handling.
10. Most conditional expressions in if and while statements are literal (or Boolean)
and therefore trigger execution when they evaluate to TRUE. Numeric expressions
trigger execution when they evaluate to a nonzero value. String expressions trigger
execution when they evaluate to a nonempty string. A NULL value is evaluated as
false and therefore does not trigger execution.
 
 
 
Chapter 5
 
1. What is the main benefit of using a function?
2. How many values can a function return?
3. What is the difference between accessing a variable by name and by reference?
4. What is the meaning of scope in PHP?
5. How can you incorporate one PHP file within another?
6. How is an object different from a function?
7. How do you create a new object in PHP?
8. What syntax would you use to create a subclass from an existing one?
9. How can you call an initializing piece of code when an object is created?
10. Why is it a good idea to explicitly declare properties within a class?
 
See “Chapter 5 Answers” on page 642 in Appendix A for the answers to these questions.
 
1. Using functions avoids the need to copy or rewrite similar code sections many times
over by combining sets of statements together so that they can be called by a simple
name.
2. By default, a function can return a single value. But by utilizing arrays, references,
and global variables, any number of values can be returned.
3. When you reference a variable by name, such as by assigning its value to another
variable or by passing its value to a function, its value is copied. The original does
not change when the copy is changed. But if you reference a variable, only a pointer
(or reference) to its value is used, so that a single value is referenced by more than
one name. Changing the value of the reference will change the original as well.
4. Scope refers to which parts of a program can access a variable. For example, a
variable of global scope can be accessed by all parts of a PHP program.
5. To incorporate one file within another, you can use the include or require direc‐
tives, or their safer variants, include_once and require_once.
6. A function is a set of statements referenced by a name that can receive and return
values. An object may contain zero or many functions (which are then called meth‐
ods) as well as variables (which are called properties), all combined in a single unit.
7. To create a new object in PHP, use the new keyword like this:
$object = new Class;
8. To create a subclass, use the extends keyword with syntax such as this:
class Subclass extends Parentclass ...
9. To call a piece of initializing code when an object is created, create a constructor
method called __construct within the class and place your code there.
10. Explicitly declaring properties within a class is unnecessary, as they will be implicitly
declared upon first use. But it is considered good practice as it helps with code
readability and debugging, and is especially useful to other people who may have
to maintain your code.
 
Chapter 6
 
1. What is the difference between a numeric and an associative array?
2. What is the main benefit of the array keyword?
3. What is the difference between foreach and each?
4. How can you create a multidimensional array
5. How can you determine the number of elements in an array?
6. What is the purpose of the explode function?
7. How can you set PHP’s internal pointer into an array back to the first element of
the array?
 
1. A numeric array can be indexed numerically using numbers or numeric variables.
An associative array uses alphanumeric identifiers to index elements.
2. The main benefit of the array keyword is that it enables you to assign several values
at a time to an array without repeating the array name.
3. Both the each function and the foreach ... as loop construct return elements
from an array; both start at the beginning and increment a pointer to make sure
the next element is returned each time; and both return FALSE when the end of the
array is reached. The difference is that the each function returns just a single ele‐
ment, so it is usually wrapped in a loop. The foreach ... as construct is already
a loop, executing repeatedly until the array is exhausted or you explicitly break out
of the loop.
4. To create a multidimensional array, you need to assign additional arrays to elements
of the main array.
5. You can use the count function to count the number of elements in an array.
6. The purpose of the explode function is to extract sections from a string that are
separated by an identifier, such as extracting words separated by spaces within a
sentence.
7. To reset PHP’s internal pointer into an array back to the first element, call the reset
function.
 
Chapter 7
 
1. Which printf conversion specifier would you use to display a floating-point
number?
2. What printf statement could be used to take the input string "Happy Birthday"
and output the string "**Happy"?
3. To send the output from printf to a variable instead of to a browser, what alternative
function would you use?
4. How would you create a Unix timestamp for 7:11 a.m. on May 2, 2016?
5. Which file access mode would you use with fopen to open a file in write and read
mode, with the file truncated and the file pointer at the start?
6. What is the PHP command for deleting the file file.txt?
7. Which PHP function is used to read in an entire file in one go, even from across
the Web?
8. Which PHP superglobal variable holds the details on uploaded files?
9. Which PHP function enables the running of system commands?
10. Which of the following tag styles is preferred in HTML5: <hr> or <hr />?
See “Chapter 7 Answers” on page 643 in Appendix A for the answers to these questions.
 
1. The conversion specifier you would use to display a floating-point number is %f.
2. To take the input string "Happy Birthday" and output the string "**Happy", you
could use a printf statement such as:
printf("%'*7.5s", "Happy Birthday");
3. To send the output from printf to a variable instead of to a browser, you would
use sprintf instead.
4. To create a Unix timestamp for 7:11am on May 2nd 2016, you could use the
command:
$timestamp = mktime(7, 11, 0, 5, 2, 2016);
5. You would use the “w+” file access mode with fopen to open a file in write and read
mode, with the file truncated and the file pointer at the start.
6. The PHP command for deleting the file file.txt is:
unlink('file.txt');
7. The PHP function file_get_contents is used to read in an entire file in one go. It
will also read them from across the Internet if provided with a URL.
8. The PHP superglobal associative array $_FILES contains the details about uploaded
files.
9. The PHP exec function enables the running of system commands.
10. In HTML5 you can use either the XHTML style of tag (such as <hr />) or the
standard HTML4 style (such as <hr>). It’s entirely up to you or your company’s
coding style.
 
 
