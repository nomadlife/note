

****** 1.Basics***********************************************************************
my_numeric <- 42
my_character <- "universe"
my_logical <- FALSE 
class(my_numeric)
class(my_character)
class(my_logical)
--------------------
[1] "numeric"
[1] "character"
[1] "logical"





****** 2.Vectors************************************************************************

vegas <- "Go!"
numeric_vector <- c(1, 10, 49)
character_vector <- c("a", "b", "c")
boolean_vector <-c(TRUE,FALSE,TRUE)

# Gamble winnings from Monday to Friday
poker_vector <- c(140, -50, 20, -120, 240)
roulette_vector <-  c(-24,-50,100,-350,10)
names(poker_vector) <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
names(roulette_vector) <- c("Monday","Tuesday","Wednesday","Thursday","Friday")
days_vector <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")

names(poker_vector) <-   days_vector
-----------------------------------
   Monday   Tuesday Wednesday  Thursday    Friday 
      140       -50        20      -120       240

names(roulette_vector) <- days_vector
----------------------------------------
   Monday   Tuesday Wednesday  Thursday    Friday 
      -24       -50       100      -350        10

total_daily <- poker_vector + roulette_vector
----------------------------------------------
   Monday   Tuesday Wednesday  Thursday    Friday 
      116      -100       120      -470       250

total_poker <- sum(poker_vector)
--------------------------------
[1] 230

total_roulette <-  sum(roulette_vector)
--------------------------------------
[1] -314

total_week <- total_poker + total_roulette
---------------------------------------
[1] -84

total_poker > total_roulette
----------------------------
[1] TRUE

poker_wednesday <- poker_vector[3]
-------------------------------
Wednesday 
       20

poker_midweek <- poker_vector[c(2,3,4)]
---------------------------------------
  Tuesday Wednesday  Thursday 
      -50        20      -120

roulette_selection_vector <- roulette_vector[c(2:5)]
---------------------------------------------------------
  Tuesday Wednesday  Thursday    Friday 
      -50       100      -350        10

poker_start <- poker_vector[c(1:3)]
  -----------------------------------
   Monday   Tuesday Wednesday 
      140       -50        20

mean(poker_start)
----------------
[1] 36.66667

selection_vector <- poker_vector > 0
------------------------------------
   Monday   Tuesday Wednesday  Thursday    Friday 
     TRUE     FALSE      TRUE     FALSE      TRUE

poker_winning_days <- poker_vector[selection_vector]
---------------------------------------------------
   Monday Wednesday    Friday 
      140        20       240

selection_vector <- roulette_vector >0
----------------------------------
   Monday   Tuesday Wednesday  Thursday    Friday 
    FALSE     FALSE      TRUE     FALSE      TRUE

roulette_winning_days <- roulette_vector[selection_vector]
----------------------------------------------------
Wednesday    Friday 
      100        10




****** 3.Matrices***********************************************************************
matrix(1:9, byrow =TRUE, nrow =3)
-----------------------------------
     [,1] [,2] [,3]
[1,]    1    2    3
[2,]    4    5    6
[3,]    7    8    9

=====================================================
new_hope <- c(460.998, 314.4)
empire_strikes <- c(290.475, 247.900)
return_jedi <- c(309.306, 165.8)
--------------------------------
[1] 460.998 314.400
[1] 290.475 247.900
[1] 290.475 247.900

box_office <- c(new_hope, empire_strikes, return_jedi)
-----------------------------------------------------
[1] 460.998 314.400 290.475 247.900 309.306 165.800

star_wars_matrix <- matrix(box_office, byrow=TRUE, nrow=3)
---------------------------------------------------------
        [,1]  [,2]
[1,] 460.998 314.4
[2,] 290.475 247.9
[3,] 309.306 165.8


region <- c("US", "non-US")
titles <- c("A New Hope", "The Empire Strikes Back", "Return of the Jedi")
---------------------------------------------------------------
[1] "US"     "non-US"
[1] "A New Hope"              "The Empire Strikes Back"
[3] "Return of the Jedi"

colnames(star_wars_matrix) <- region
rownames(star_wars_matrix) <- titles
star_wars_matrix
                             US non-US
A New Hope              460.998  314.4
The Empire Strikes Back 290.475  247.9
Return of the Jedi      309.306  165.8

=========================================================
star_wars_matrix <- matrix(box_office, 
			nrow = 3, 
			byrow = TRUE, 
			dimnames = list(c("A New Hope", 
					"The Empire Strikes Back", 
					"Return of the Jedi"), 
					c("US", "non-US")))

worldwide_vector <- rowSums(star_wars_matrix)
---------------------------------------------
             A New Hope The Empire Strikes Back      Return of the Jedi 
                775.398                 538.375                 475.106

all_wars_matrix <- cbind(star_wars_matrix, worldwide_vector)
------------------------------------------------------------
                             US non-US worldwide_vector
A New Hope              460.998  314.4          775.398
The Empire Strikes Back 290.475  247.9          538.375
Return of the Jedi      309.306  165.8          475.106




star_wars_matrix2 
------------------
                        US non-US
The Phantom Menace   474.5  552.5
Attack of the Clones 310.7  338.7
Revenge of the Sith  380.3  468.5

all_wars_matrix <- rbind(star_wars_matrix,star_wars_matrix2)
----------------
                           US non-US
A New Hope              461.0  314.4
The Empire Strikes Back 290.5  247.9
Return of the Jedi      309.3  165.8
The Phantom Menace      474.5  552.5
Attack of the Clones    310.7  338.7
Revenge of the Sith     380.3  468.5

total_revenue_vector <- colSums(all_wars_matrix)
-------------------------------------------
    US non-US 
2226.3 2087.8

non_us_all <- all_wars_matrix[1:6,2]
------------------------------------
             A New Hope The Empire Strikes Back      Return of the Jedi 
                  314.4                   247.9                   165.8 
     The Phantom Menace    Attack of the Clones     Revenge of the Sith 
                  552.5                   338.7                   468.5

mean(non_us_all)
------------------
[1] 347.9667

non_us_some <- all_wars_matrix[1:2,2]
-------------------------------------
             A New Hope The Empire Strikes Back 
                  314.4                   247.9

mean(non_us_some)
---------------------
[1] 281.15


visitors <- all_wars_matrix/5
-----------------------------
                           US non-US
A New Hope              92.20  62.88
The Empire Strikes Back 58.10  49.58
Return of the Jedi      61.86  33.16
The Phantom Menace      94.90 110.50
Attack of the Clones    62.14  67.74
Revenge of the Sith     76.06  93.70

ticket_prices_matrix
-----------------------
                         US non-US
A New Hope              5.0    5.0
The Empire Strikes Back 6.0    6.0
Return of the Jedi      7.0    7.0
The Phantom Menace      4.0    4.0
Attack of the Clones    4.5    4.5
Revenge of the Sith     4.9    4.9

visitors <- all_wars_matrix/ticket_prices_matrix
------------------------------------------------
                               US    non-US
A New Hope               92.20000  62.88000
The Empire Strikes Back  48.41667  41.31667
Return of the Jedi       44.18571  23.68571
The Phantom Menace      118.62500 138.12500
Attack of the Clones     69.04444  75.26667
Revenge of the Sith      77.61224  95.61224

us_visitors <- visitors[1:6,1]
--------------------------------
             A New Hope The Empire Strikes Back      Return of the Jedi 
               92.20000                48.41667                44.18571 
     The Phantom Menace    Attack of the Clones     Revenge of the Sith 
              118.62500                69.04444                77.61224

mean(us_visitors)
-----------------
[1] 75.01401


****** 4.Factors******************************************************************************

gender_vector <- c("Male", "Female", "Female", "Male", "Male")
factor_gender_vector <- factor(gender_vector)
----------------------------
[1] Male   Female Female Male   Male  
Levels: Female Male

animals_vector <- c("Elephant", "Giraffe", "Donkey", "Horse")
factor_animals_vector <- factor(animals_vector)
-------------------------
[1] Elephant Giraffe  Donkey   Horse   
Levels: Donkey Elephant Giraffe Horse

temperature_vector <- c("High", "Low", "High","Low", "Medium")
factor_temperature_vector <- factor(temperature_vector, order = TRUE, levels = c("Low", "Medium", "High"))
-----------------------------
[1] High   Low    High   Low    Medium
Levels: Low < Medium < High

=============================================
survey_vector <- c("M", "F", "F", "M", "M")
factor(survey_vector)
---------------------
[1] M F F M M
Levels: F M

levels(factor_survey_vector) <-c("Female","Male")
factor_survey_vector
-----------------------
[1] Male   Female Female Male   Male  
Levels: Female Male

summary(survey_vector)
------------------------
   Length     Class      Mode 
        5 character character

summary(factor_survey_vector)
-----------------------------
Female   Male 
     2      3

factor_survey_vector[1]
------------------------------
[1] Male
Levels: Female Male

factor_survey_vector[2]
-----------------------------------
[1] Female
Levels: Female Male

male > female
-------------
error because of unordered data


===========================================================
speed_vector <- c("fast", "slow", "slow", "fast", "insane")
factor_speed_vector <- factor(speed_vector,ordered=TRUE, levels=c("slow","fast","insane") )
factor_speed_vector
-----------------------------------
[1] fast   slow   slow   fast   insane
Levels: slow < fast < insane

da2 <-factor_speed_vector[2]
da5 <-factor_speed_vector[5]
da2 > da5
--------------
[1] FALSE



****** 5.Data Frames**************************************************************************


mtcars
------------------------------------------------------------------------
                     mpg cyl  disp  hp drat    wt  qsec vs am gear carb
Mazda RX4           21.0   6 160.0 110 3.90 2.620 16.46  0  1    4    4
Mazda RX4 Wag       21.0   6 160.0 110 3.90 2.875 17.02  0  1    4    4
Datsun 710          22.8   4 108.0  93 3.85 2.320 18.61  1  1    4    1
Hornet 4 Drive      21.4   6 258.0 110 3.08 3.215 19.44  1  0    3    1
Hornet Sportabout   18.7   8 360.0 175 3.15 3.440 17.02  0  0    3    2
Valiant             18.1   6 225.0 105 2.76 3.460 20.22  1  0    3    1
Duster 360          14.3   8 360.0 245 3.21 3.570 15.84  0  0    3    4
Merc 240D           24.4   4 146.7  62 3.69 3.190 20.00  1  0    4    2
Merc 230            22.8   4 140.8  95 3.92 3.150 22.90  1  0    4    2
Merc 280            19.2   6 167.6 123 3.92 3.440 18.30  1  0    4    4
Merc 280C           17.8   6 167.6 123 3.92 3.440 18.90  1  0    4    4
Merc 450SE          16.4   8 275.8 180 3.07 4.070 17.40  0  0    3    3
Merc 450SL          17.3   8 275.8 180 3.07 3.730 17.60  0  0    3    3
Merc 450SLC         15.2   8 275.8 180 3.07 3.780 18.00  0  0    3    3
Cadillac Fleetwood  10.4   8 472.0 205 2.93 5.250 17.98  0  0    3    4
Lincoln Continental 10.4   8 460.0 215 3.00 5.424 17.82  0  0    3    4
Chrysler Imperial   14.7   8 440.0 230 3.23 5.345 17.42  0  0    3    4
Fiat 128            32.4   4  78.7  66 4.08 2.200 19.47  1  1    4    1
Honda Civic         30.4   4  75.7  52 4.93 1.615 18.52  1  1    4    2
Toyota Corolla      33.9   4  71.1  65 4.22 1.835 19.90  1  1    4    1
Toyota Corona       21.5   4 120.1  97 3.70 2.465 20.01  1  0    3    1
Dodge Challenger    15.5   8 318.0 150 2.76 3.520 16.87  0  0    3    2
AMC Javelin         15.2   8 304.0 150 3.15 3.435 17.30  0  0    3    2
Camaro Z28          13.3   8 350.0 245 3.73 3.840 15.41  0  0    3    4
Pontiac Firebird    19.2   8 400.0 175 3.08 3.845 17.05  0  0    3    2
Fiat X1-9           27.3   4  79.0  66 4.08 1.935 18.90  1  1    4    1
Porsche 914-2       26.0   4 120.3  91 4.43 2.140 16.70  0  1    5    2
Lotus Europa        30.4   4  95.1 113 3.77 1.513 16.90  1  1    5    2
Ford Pantera L      15.8   8 351.0 264 4.22 3.170 14.50  0  1    5    4
Ferrari Dino        19.7   6 145.0 175 3.62 2.770 15.50  0  1    5    6
Maserati Bora       15.0   8 301.0 335 3.54 3.570 14.60  0  1    5    8
Volvo 142E          21.4   4 121.0 109 4.11 2.780 18.60  1  1    4    2


head(mtcars)
-----------------------------------------------------------------------
                   mpg cyl disp  hp drat    wt  qsec vs am gear carb
Mazda RX4         21.0   6  160 110 3.90 2.620 16.46  0  1    4    4
Mazda RX4 Wag     21.0   6  160 110 3.90 2.875 17.02  0  1    4    4
Datsun 710        22.8   4  108  93 3.85 2.320 18.61  1  1    4    1
Hornet 4 Drive    21.4   6  258 110 3.08 3.215 19.44  1  0    3    1
Hornet Sportabout 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2
Valiant           18.1   6  225 105 2.76 3.460 20.22  1  0    3    1



str(mtcars)
-------------------------------------------------------------------------
'data.frame':	32 obs. of  11 variables:
 $ mpg : num  21 21 22.8 21.4 18.7 18.1 14.3 24.4 22.8 19.2 ...
 $ cyl : num  6 6 4 6 8 6 8 4 4 6 ...
 $ disp: num  160 160 108 258 360 ...
 $ hp  : num  110 110 93 110 175 105 245 62 95 123 ...
 $ drat: num  3.9 3.9 3.85 3.08 3.15 2.76 3.21 3.69 3.92 3.92 ...
 $ wt  : num  2.62 2.88 2.32 3.21 3.44 ...
 $ qsec: num  16.5 17 18.6 19.4 17 ...
 $ vs  : num  0 0 1 1 0 1 0 1 1 1 ...
 $ am  : num  1 1 1 0 0 0 0 0 0 0 ...
 $ gear: num  4 4 4 3 3 3 3 4 4 4 ...
 $ carb: num  4 4 1 1 2 1 4 2 2 4 ...



==================================================================
name <- c("Mercury", "Venus", "Earth", "Mars", "Jupiter", "Saturn", "Uranus", "Neptune")
type <- c("Terrestrial planet", "Terrestrial planet", "Terrestrial planet", 
          "Terrestrial planet", "Gas giant", "Gas giant", "Gas giant", "Gas giant")
diameter <- c(0.382, 0.949, 1, 0.532, 11.209, 9.449, 4.007, 3.883)
rotation <- c(58.64, -243.02, 1, 1.03, 0.41, 0.43, -0.72, 0.67)
rings <- c(FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, TRUE, TRUE)
planets_df <-data.frame(name,type,diameter,rotation,rings)
-----------------------------------------------------------
     name               type diameter rotation rings
1 Mercury Terrestrial planet    0.382    58.64 FALSE
2   Venus Terrestrial planet    0.949  -243.02 FALSE
3   Earth Terrestrial planet    1.000     1.00 FALSE
4    Mars Terrestrial planet    0.532     1.03 FALSE
5 Jupiter          Gas giant   11.209     0.41  TRUE
6  Saturn          Gas giant    9.449     0.43  TRUE
7  Uranus          Gas giant    4.007    -0.72  TRUE
8 Neptune          Gas giant    3.883     0.67  TRUE

str(planets_df)
----------------------------------------------------------------------
'data.frame':	8 obs. of  5 variables:
 $ name    : Factor w/ 8 levels "Earth","Jupiter",..: 4 8 1 3 2 6 7 5
 $ type    : Factor w/ 2 levels "Gas giant","Terrestrial planet": 2 2 2 2 1 1 1 1
 $ diameter: num  0.382 0.949 1 0.532 11.209 ...
 $ rotation: num  58.64 -243.02 1 1.03 0.41 ...
 $ rings   : logi  FALSE FALSE FALSE FALSE TRUE TRUE ...

planets_df[1,3]
---------------
[1] 0.382

planets_df[4,]
-------------------------------------------------
  name               type diameter rotation rings
4 Mars Terrestrial planet    0.532     1.03 FALSE

planets_df[1:5,"diameter"]
---------------------------------------
[1]  0.382  0.949  1.000  0.532 11.209

rings_vector <- planets_df$rings
----------------------------------------
[1] FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE

planets_df[rings_vector,]
-------------------------------------------
     name      type diameter rotation rings
5 Jupiter Gas giant   11.209     0.41  TRUE
6  Saturn Gas giant    9.449     0.43  TRUE
7  Uranus Gas giant    4.007    -0.72  TRUE
8 Neptune Gas giant    3.883     0.67  TRUE

subset(planets_df,subset=diameter>1)
-----------------------------------------
     name      type diameter rotation rings
5 Jupiter Gas giant   11.209     0.41  TRUE
6  Saturn Gas giant    9.449     0.43  TRUE
7  Uranus Gas giant    4.007    -0.72  TRUE
8 Neptune Gas giant    3.883     0.67  TRUE


subset(planets_df,subset=diameter<1)
----------------------------------------------
     name               type diameter rotation rings
1 Mercury Terrestrial planet    0.382    58.64 FALSE
2   Venus Terrestrial planet    0.949  -243.02 FALSE
4    Mars Terrestrial planet    0.532     1.03 FALSE


=====================================================

order()

> a<-c(100,10,1000)
> a
[1]  100   10 1000
> order(a)
[1] 2 1 3
> a[order(a)]
[1]   10  100 1000

positoins <- order(planets_df$diameter)



