.container{
display: grid | inline-grid;
	grid - generates a block-level grid
	inline-grid - generates an inline-level grid

grid-template-columns: 40px 50px auto 50px 40px;
grid-template-columns: [first] 40px [line2] 50px [line3] auto [col4-start] 50px [five] 40px [end];
grid-template-rows: 25% 100px auto;
grid-template-rows: [row1-start] 25% [row1-end] 100px [third-line] auto [last-line];
grid-template-rows: [row1-start] 25% [row1-end row2-start] 25% [row2-end];
grid-template-columns: repeat(3, 20px [col-start]) 5%;
grid-template-columns: 20px [col-start] 20px [col-start] 20px [col-start] 5%;
grid-template-columns: 1fr 1fr 1fr;
grid-template-columns: 1fr 50px 1fr 1fr;

grid-template: none | <grid-template-rows> / <grid-template-columns>;
grid-template:
    [row1-start] "header header header" 25px [row1-end]
    [row2-start] "footer footer footer" 25px [row2-end]
    / auto 50px auto;
grid-template-rows: [row1-start] 25px [row1-end row2-start] 25px [row2-end];
grid-template-columns: auto 50px auto;
grid-template-areas: 
    "header header header" 
    "footer footer footer";

grid-column-gap: 10px;
grid-row-gap: 15px;
grid-gap: <grid-row-gap> <grid-column-gap>;
grid-gap: 15px 10px;

grid-auto-columns: 60px;

grid-auto-flow: row | column | row dense | column dense;
	
grid: <row> / <column> ;
grid: 100px 300px / 3fr 1fr;
grid: auto-flow / 200px 1fr;
grid: auto-flow dense 100px / 1fr 2fr;
grid: 100px 300px / auto-flow 200px;
grid: [row1-start] "header header header" 1fr [row1-end]
      [row2-start] "footer footer footer" 25px [row2-end]
       / auto 50px auto;
}

.item {
  grid-column-start: col-start 2;
  grid-column-start: <number> | <name> | span <number> | span <name> | auto;
  grid-column-end: <number> | <name> | span <number> | span <name> | auto;
  grid-row-start: <number> | <name> | span <number> | span <name> | auto;
  grid-row-end: <number> | <name> | span <number> | span <name> | auto;
  grid-column-start: 2;
  grid-column-end: five;
  grid-row-start: row1-start;
  grid-row-end: 3;
  grid-column: <start-line> / <end-line> | <start-line> / span <value>;
  grid-row: <start-line> / <end-line> | <start-line> / span <value>;
  grid-column: 3 / span 2;
  grid-row: third-line / 4;

  
}
.item-e {
  grid-column: 1 / 2;
  grid-row: 2 / 3;
}
.item-e {
  grid-column: 5 / 6;
  grid-row: 2 / 3;
}
====================== justification =======================

justify-items: start | end | center | stretch;
align-items: start | end | center | stretch;
place-items: <align-items> / <justify-items> ;

justify-content: start | end | center | stretch | space-around | space-between | space-evenly;	
align-content: start | end | center | stretch | space-around | space-between | space-evenly;	
place-content:<align-content> / <justify-content>;

====================== grid-template-area=========================

.container {
  grid-template-columns: 50px 50px 50px 50px;
  grid-template-rows: auto;
  grid-template-areas: 
    "header header header header"
    "main main . sidebar"
    "footer footer footer footer";
}

.item-a {
  grid-area: header;
}
.item-b {
  grid-area: main;
}
.item-c {
  grid-area: sidebar;
}
.item-d {
  grid-area: footer;
  grid-area: <name> | <row-start> / <column-start> / <row-end> / <column-end>;
  grid-area: header;
  grid-area: 1 / col4-start / last-line / 6;

  justify-self: start | end | center | stretch;
  align-self: start | end | center | stretch;
  place-self: <align-self> / <justify-self>;

}
