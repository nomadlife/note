Django version 	Python versions
1.8 		2.7, 3.2 (until the end of 2016), 3.3, 3.4, 3.5
1.9, 		1.10 2.7, 3.4, 3.5
1.11 		2.7, 3.4, 3.5, 3.6
2.0 		3.5+

** install
pip install django
(or pip install django==1.9)
mkdir django-tutorials
cd django-tutorials

** new project
django-admin startproject [mysite or anyname]

** new app
cd mysite
python manage.py startapp community
python manage.py runserver

** after make model
python manage.py makemigrations [appname]
  --> check if there are changed
python manage.py migrate
  --> create DB

** make super user account for DB (after make table)
python manage.py createsuperuser

** When forgot ID
python manage.py shell
>>> from django.contrib.auth.models import User
>>> User.objects.filter(is_superuser=True)
...user list ...
** Reset password
>>> usr = User.objects.get(username='your username')
>>> usr.set_password('raw password')
>>> usr.save()




** DB api
>>> Album.objects.all()

>>> a = Album(artist="Taylor Swift",
	album_title="Red",
	genre="Country",
	album_logo="https://~~~")
>>> a.save()
>>> a.artist
>>> a.album_title
>>> a.id
1
>>> a.pk
1
>>> b = Album()
>>> b.artist = "Myth"
>>> b.album_title = "High school"
>>> b.genre = "Punk"
>>> b.album_logo = "https://~~~"
>>> b.save()

>>> Album.objects.all()
>>> Album.objects.filter(id=1)
>>> Album.objects.filter(artist__startwith='Taylor')



>>> from music.models import Album, Song
>>> album1 = Album.objects.get(pk=1)
>>> album1.artist

>>> song = Song()
>>> song.album = album1
>>> song.file_type = 'mp3'
>>> song.song_title = 'I hate my boyfriend'
>>> song.save()

ch18. Related Objects Set

album1.song_set.all()
album1.song_set.create(song_title='I love bacon', file_type='mp3')
album1.song_set.create(song_title='bucky is lucky', file_type='mp3')
album1.song_set.create(song_title='Ice cream', file_type='mp3')

song=album1.song_set.create(song_title='I love bacon', file_type='mp3')
song.album
song.song_title
album1.song_set.all()
album1.song_set.count()

**************************************
django-admin 
    check
    compilemessages
    createcachetable
    dbshell
    diffsettings
    dumpdata
    flush
    inspectdb
    loaddata
    makemessages
    makemigrations
    migrate
    runserver
    sendtestemail
    shell
    showmigrations
    sqlflush
    sqlmigrate
    sqlsequencereset
    squashmigrations
    startapp
    startproject
    test
    testserver

