******scrape Project Euler Site *************
*****Step by Step ******
curl -s 'https://projecteuler.net/archives;page=1' >page1.html

< page1.html scrape -b -e 'table#problems_table > tr:not(:first-child)' >table.html

< table.html xml2json > table.json

< table.json jq -c '.html.body.tr[] | {number: .td[0][],problem: .td[2][]}' | head

< table.json jq -c '.html.body.tr[] | {id: .td[0]["$t"],subject: .td[1][]["$t"],solved:.td[2][]["$t"]}' > list.json

< list.json json2csv -p -k id,subject,solved > list.csv

head -n 11 list.csv |csvlook

*******One Line Comamnd(separated) ************
curl -s 'https://projecteuler.net/archives;page=1' |
scrape -be 'table#problems_table > tr:not(:first-child)' |
xml2json |
jq -c '.html.body.tr[] | {id: .td[0]["$t"],subject: .td[1][]["$t"],solved:.td[2][]["$t"]}' |
json2csv -p -k id,subject,solved |
head -n 11 |csvlook

******** One Line Command *********************
curl -s 'https://projecteuler.net/archives;page=1' | scrape -be 'table#problems_table > tr:not(:first-child)' | xml2json | jq -c '.html.body.tr[] | {id: .td[0]["$t"],subject: .td[1][]["$t"],solved:.td[2][]["$t"]}' | json2csv -p -k id,subject,solved | head -n 11 |csvlook


** scrape 2 : country page
< ... scrape -be 'table#main_table' 
< ... scrape -be 'table#main_table > tbody>tr' 
< ... scrape -be 'table#main_table > tbody>tr:not(:first-child)'

< ... xml2json > table-...json

< ... jq -c '.html.body.tr[] | {class:.td[0]["$t"]}' | head
< ... jq -c '.html.body.tr[] | .td[]["class"]' | head
< ... jq -c '.html.body.tr[] | {id:.id,rank:.td[0]."$t",name:.td[1].table.tbody.tr.td[0].div.i."$t"}' | head


===========================
tfg work scrpping

scrape try :1
< work.html scrape -be 'div' | head 
< work.html scrape -be 'div' | xml2json > table_div.json

scrape try :2
< work.html scrape -be 'body>div' | head
< work.html scrape -be 'body>div' | xml2json > divTable2.json

scrape try :3
< work.html scrape -be 'body>div#Page>div' | head
< work.html scrape -be 'body>div#Page>div' | xml2json > divTable3.json

< divTable3.json jq -c '.html.body.div[] | {id}'
< divTable3.json jq -c '.html.body.div[] | {id,parameters}'
< divTable3.json jq -c '.html.body.div[] | {id:.["id"],parameters:.["parameters"]}'
< divTable3.json jq -c '.html.body.div[] | {id:.id,parameters:.parameters}'

